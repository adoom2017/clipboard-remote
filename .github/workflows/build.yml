# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Build

on:
  push:
    paths-ignore:
        - "architecture.png"
        - ".gitignore"
        - "README.md"
        - "config/**"
        - ".github/**"
    branches: [ "master" ]
    tags: 
        - "v*"
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    permissions: write-all
    strategy:
      matrix:
        build: [windows, linux]
        include:
          - build: windows
            os: windows-latest
          - build: linux
            os: ubuntu-latest
    runs-on: ${{ matrix.os }}
    
    steps:
      - uses: actions/checkout@v3
  
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          check-latest: true
          
      - name: Download dependencies
        run: go mod download

      - name: Build Binary Windows
        if: ${{ matrix.build=='windows' }}
        run: |
          go build -o bin/clip-client.exe ./win-client
          go build -o bin/clip-server.exe ./server
        env:
          CGO_ENABLED: 1
          
      - name: Build Linux Windows
        if: ${{ matrix.build=='linux' }}
        run: go build -o bin/clip-server ./server
        env:
          CGO_ENABLED: 1

      - uses: actions/upload-artifact@v3
        if: ${{  success() }}
        with:
          name: artifact
          path: bin/
  Upload-Release:
    permissions: write-all
    if: ${{ github.ref_type=='tag' }}
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: bin/

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: bin

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        if: ${{  success() }}
        with:
          tag_name: ${{ github.ref_name }}
          files: bin/*
          generate_release_notes: true
